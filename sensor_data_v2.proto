/*
 * sensor_data_v2.proto
 * Provides a medium for sensor<->device<->server communication
 */


syntax = "proto3";

/*
 * DataType
 * ---------------
 */
enum DataType {
  DEFAULT_DATA = 0;
  MEASUREMENT = 1;
}

/*
 * ErrorType
 * ---------------
 */
enum ErrorType {
  DEFAULT_ERROR = 0; 
}

/*
 * SensorType
 * ---------------
 * An enumeration of the types of sensors that are available or will be
 * available for use in the device.
 *
 * types:
 * DEFAULT_SENSOR
 *  - unit(s): n/a
 * ALTITUDE
 *  - unit(s): METERS
 * ANEMOMETER
 *  - unit(s): METERS_PER_SECOND, RADIANS
 * EQUIVALENT_CARBON_DIOXIDE
 *  - unit(s): PARTS_PER_MILLION
 * HUMIDITY
 *  - unit(s): PERCENT
 * PRESSURE
 *  - unit(s): HECTOPASCALS
 * TEMPERATURE
 *  - unit(s): CELSIUS
 * PARTS_PER_BILLION
 *  - unit(s): TOTAL_VOLATILE_ORGANIC_COMPOUNDS
 */
enum SensorType {
  DEFAULT_SENSOR = 0;
  ALTITUDE = 1;
  ANEMOMETER = 2;
  EQUIVALENT_CARBON_DIOXIDE = 3;
  HUMIDITY = 4;
  PRESSURE = 5;
  TEMPERATURE = 6;
  TOTAL_VOLATILE_ORGANIC_COMPOUNDS = 7;
}

/*
 * Units
 * ---------------
 * An enumeration of the units in which the data is measured.
 *
 * types:
 * DEFAULT_UNIT
 *  - use: debugging
 *  - sensor type: n/a
 * CELSIUS
 *  - use: temperature measurements
 *  - sensor type: TEMPERATURE
 * HECTOPASCALS - pressure
 *  - use: pressure measurements
 *  - sensor type: PRESSURE
 * METERS
 *  - use: altitude measurments
 *  - sensor type: ALTITUDE
 * METERS_PER_SECOND
 *  - use: wind speed measurements
 *  - sensor type: ANEMOMETER
 * PARTS_PER_BILLION
 *  - use: volatile organic compounds measurements
 *  - sensor type: TOTAL_VOLATILE_ORGANIC_COMPOUNDS
 * PARTS_PER_MILLION
 *  - use: equivalent carbon dioxide measurements
 *  - sensor type: EQUIVALENT_CARBON_DIOXIDE
 * PERCENT
 *  - use: humidity measurements
 *  - sensor type: HUMIDITY
 * RADIANS
 *  - use: wind direction measurements
 *  - sensor type: ANEMOMETER
 */
enum Unit {
  DEFAULT_UNIT = 0;
  CELSIUS = 1;
  HECTOPASCALS = 2;
  METERS = 3;
  METERS_PER_SECOND = 4;
  PARTS_PER_BILLION = 5;
  PARTS_PER_MILLION = 6;
  PERCENT = 7;
  RADIANS = 8;
}

/*
 * EquivalentCarbonDioxideQuantity
 * ---------------
 */
message EquivalentCarbonDioxideQuantity {
  uint32 value = 1;
  Unit unit = 2;
  SensorType sensor = 3;
}

/*
 * TemperatureQuantity
 * ---------------
 */
message TemperatureQuantity {
  double value = 1;
  Unit unit = 2;
  SensorType sensor = 3;
}

/*
 * TotalVolatileOrganicCompoundsQuantity 
 * ---------------
 * 
 */
message TotalVolatileOrganicCompoundsQuantity {
  uint32 value = 1;
  Unit unit = 2;
  SensorType sensor = 3;
}

/*
 * Measurement 
 * ---------------
 *
 *
 */
message Measurement {
  TotalVolatileOrganicCompoundsQuantity voc_quantity = 1;
  EquivalentCarbonDioxideQuantity eco2_quantity = 2;
  TemperatureQuantity temp_quantity = 3;
  int64 time = 4;
}

/*
 * Data 
 * ---------------
 */
message Data {
  Measurement measurement = 1;
  DataType data_type = 2;
}

/*
 * Response 
 * ---------------
 */
message Response {
  Data data = 1;
  bool success = 2;
  ErrorType error_type = 3;
  string message = 4;
}

/*
 * Request 
 * ---------------
 */
// message Request {
//   string requestType = 1;
//  
// }
